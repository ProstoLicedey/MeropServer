{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mi200\\\\WebstormProjects\\\\Merops\\\\client\\\\src\\\\pages\\\\creator\\\\creator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Layout, Space, Switch } from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport CreatorMenu from \"../../components/creator/CreatorMenu\";\nimport MeropTable from \"../../components/creator/Tabs/event\";\nimport Sider from \"antd/es/layout/Sider\";\nimport ControllerCreator from \"./controllerCreator\";\nimport { Context } from \"../../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\nimport Profile from \"../../components/user/profile\";\nimport Halls from \"../../components/creator/Tabs/halls\";\nimport Buyers from \"../../components/creator/Tabs/buyers\";\nimport { logout } from \"../../http/userAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLANS = {\n  events: MeropTable,\n  zal: Halls,\n  buyers: Buyers,\n  controler: ControllerCreator,\n  aboutMe: Profile\n};\nconst Creator = () => {\n  _s();\n  const hashValue = window.location.hash.substring(1);\n  const initialSelectedPlan = PLANS[hashValue] ? hashValue : 'events';\n  const [selectedPlan, setSelectedPlan] = useState(initialSelectedPlan);\n  useEffect(() => {\n    const handleHashChange = () => {\n      const hashValue = window.location.hash.substring(1);\n      setSelectedPlan(PLANS[hashValue] ? hashValue : 'events');\n    };\n\n    // Подписываемся на событие изменения hash при монтировании компонента\n    window.addEventListener('hashchange', handleHashChange);\n\n    // Убираем подписку при размонтировании компонента\n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    };\n  }, []); // Пустой массив зависимостей, чтобы хук useEffect выполнился только при монтировании\n\n  if (selectedPlan == 'exit') {\n    logout().then();\n  } else {\n    const PlanView = PLANS[selectedPlan];\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      width: '90%',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sider, {\n      width: \"20%\",\n      style: {\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(CreatorMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlanView, {\n      style: {\n        backgroundColor: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Creator, \"rch7pGgGe/hGAbl2Ng6bcfaE1fU=\");\n_c = Creator;\nexport default _c2 = observer(Creator);\nvar _c, _c2;\n$RefreshReg$(_c, \"Creator\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Layout","Space","Switch","Title","CreatorMenu","MeropTable","Sider","ControllerCreator","Context","observer","ReCAPTCHA","Profile","Halls","Buyers","logout","jsxDEV","_jsxDEV","PLANS","events","zal","buyers","controler","aboutMe","Creator","_s","hashValue","window","location","hash","substring","initialSelectedPlan","selectedPlan","setSelectedPlan","handleHashChange","addEventListener","removeEventListener","then","PlanView","style","width","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/mi200/WebstormProjects/Merops/client/src/pages/creator/creator.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Layout, Space, Switch} from \"antd\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport CreatorMenu from \"../../components/creator/CreatorMenu\";\r\nimport MeropTable from \"../../components/creator/Tabs/event\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\nimport ControllerCreator from \"./controllerCreator\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {ReCAPTCHA} from \"react-google-recaptcha\";\r\nimport Profile from \"../../components/user/profile\";\r\nimport Halls from \"../../components/creator/Tabs/halls\";\r\nimport Buyers from \"../../components/creator/Tabs/buyers\";\r\nimport {logout} from \"../../http/userAPI\";\r\n\r\n\r\n\r\nconst PLANS ={\r\n    events: MeropTable,\r\n    zal: Halls,\r\n    buyers: Buyers,\r\n    controler: ControllerCreator,\r\n    aboutMe: Profile,\r\n}\r\nconst Creator = () => {\r\n    const hashValue = window.location.hash.substring(1);\r\n    const initialSelectedPlan = PLANS[hashValue] ? hashValue : 'events';\r\n    const [selectedPlan, setSelectedPlan] = useState(initialSelectedPlan);\r\n\r\n    useEffect(() => {\r\n        const handleHashChange = () => {\r\n            const hashValue = window.location.hash.substring(1);\r\n            setSelectedPlan(PLANS[hashValue] ? hashValue : 'events');\r\n        };\r\n\r\n        // Подписываемся на событие изменения hash при монтировании компонента\r\n        window.addEventListener('hashchange', handleHashChange);\r\n\r\n        // Убираем подписку при размонтировании компонента\r\n        return () => {\r\n            window.removeEventListener('hashchange', handleHashChange);\r\n        };\r\n    }, []); // Пустой массив зависимостей, чтобы хук useEffect выполнился только при монтировании\r\n\r\n    if(selectedPlan== 'exit'){\r\n        logout().then( )\r\n    }\r\n    else {\r\n        const PlanView =  PLANS[selectedPlan];\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Layout style={{ width: '90%', backgroundColor:'white' }}>\r\n            <Sider width=\"20%\" style={{backgroundColor:'white'}}>\r\n                <CreatorMenu />\r\n            </Sider>\r\n\r\n            <PlanView style={{  backgroundColor:'white' }}/>\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default observer(Creator);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}